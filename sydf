#! /bin/env bash

SYDFCONFIG=$HOME/.config/sydf.conf
SYDFDIR=""
SYDFTRACKER=""
if [ -f $SYDFCONFIG ]; then
	SYDFDIR=`cat $SYDFCONFIG`
	SYDFTRACKER=$SYDFDIR/.sydf
elif [ $1 != "init" ]; then
	echo "sydf needs to be initialized"
	exit
fi

function path {

	P=""
	if [ -z $1 ] || [ $1 = "." ]; then
		P=$PWD
	elif [ ${1:0:1} = "/" ]; then
		P=$1
	else
		P=$PWD/$1
	fi

	if [ ${P: -1} = "/" ]; then
		P=${P::-1}
	fi

	echo $P

}

function init {
	
	DIR=`path $1`;

	if [[ -z $1 ]]; then
		DIR=$HOME/.sydf
	fi

	if [ -e $SYDFCONFIG ]; then
		if [ $DIR = `cat $SYDFCONFIG` ]; then
			echo "sydf is already configured to use this directory"
		else
			echo "sydf is configured to use another directory"
			echo "run 'sydf unhook' to unmanage files"
		fi
	else
		echo $DIR > $SYDFCONFIG
		touch $DIR/.sydf
		mkdir -p $DIR
	fi

}

function add {

	if [[ -z "${@}" ]]; then
		echo "no files selected to add"
	fi

	for file in ${@}; do

		FILEPATH=`path $file`
		FILE=${FILEPATH:1}
		DIR=`dirname $FILE`

		if [ -e $SYDFDIR/$FILE ]; then
			echo "'$file' is already managed using sydf"
		elif [ -f $FILEPATH ] && [ ! -L $file ]; then

			mkdir -p $SYDFDIR/$DIR
			mv /$FILE $SYDFDIR/$FILE
			ln -s $SYDFDIR/$FILE /$FILE

		elif [ -d $FILEPATH ] && [ ! -L $file ]; then

			mkdir -p $SYDFDIR/$DIR
			mv /$FILE $SYDFDIR/$FILE
			ln -s $SYDFDIR/$FILE /$FILE

		else
			echo "'$file' cannot be added to sydf"
		fi
	done

}

function remove {

	if [[ -z "${@}" ]]; then
		echo "no files selected to remove"
	fi

	for file in ${@}; do
		
		FILEPATH=`path $file`
		FILE=${FILEPATH:1}
		DIR=`dirname $FILE`

		if [ -f $SYDFDIR/$FILE ]; then
			
			rm $FILEPATH
			mv $SYDFDIR/$FILE $FILEPATH

		elif [ -d $SYDFDIR/$FILE ]; then
			
			if [ -L $FILEPATH ]; then
				
				rm $FILEPATH
				mv $SYDFDIR/$FILE $FILEPATH

			else
				
				for link in `find $FILEPATH -type l`; do
					remove $link
				done

			fi

		else
			echo "'$file' is not managed using sydf"
		fi
	done

	cleanup

}

function cleanup {
	
	local file
	for file in `find $SYDFDIR/$1  -maxdepth 1 ! -path $SYDFDIR/$1 -printf "$1/%P\n"`; do
		
		if [ ! -L /$file ]; then
			if [ -z "`ls -A $SYDFDIR/$file`" ]; then
				rmdir $SYDFDIR/$file
			else
				cleanup $file
				if [ -z "`ls -A $SYDFDIR/$file`" ]; then
					rmdir $SYDFDIR/$file
				fi
			fi
		fi

	done

}

function list {

	find $SYDFDIR ! -path $SYDFDIR -printf "$1%P\n"; 

}



function unhook {

	local file
	for file in `find $SYDFDIR/$1  -maxdepth 1 ! -path $SYDFDIR/$1 -printf "$1/%P\n"`; do
		
		if [ -L /$file ]; then
			remove /$file
		else
			unhook $file
		fi

	done

}

function help {

	printf \
"NAME
  sydf - symlink your damn files

DESCRIPTION
  sydf is a system-wide file linker

COMMANDS
  init
      Initialize sydf directory for current user
  add
      Add files and directories
  remove
      Remove files and directories
  list
      List all managed files and directories
  hook
      Attempts to link all managed files
  unhook
      Reverts all symbolic links\n"
}

case $1 in
	init)
		init $2;
		;;
	add)
		add ${@:2};
		;;
	remove)
		remove ${@:2};
		;;
	list)
		list /;
		;;
	path)
		path ${@:2};
		;;
	cleanup)
		cleanup;
		;;
	unhook)
		unhook;
		rm $SYDFCONFIG;
		;;
	*)
		help;
		;;
esac