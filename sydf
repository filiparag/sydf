#! /bin/env bash

SYDFCONFIG=$HOME/.config/sydf.conf
SYDFDIR=""
if [ -f $SYDFCONFIG ]; then
	SYDFDIR=`cat $SYDFCONFIG`
else
	echo "sydf needs to be initialized"
fi

function path {

	P=""
	if [ -z $1 ] || [ $1 = "." ]; then
		P=$PWD
	elif [ ${1:0:1} = "/" ]; then
		P=$1
	else
		P=$PWD/$1
	fi

	echo $P

}

function init {
	
	DIR=`path $1`;	

	if [ -e $SYDFCONFIG ]; then
		if [ $DIR = `cat $SYDFCONFIG` ]; then
			echo "sydf is already configured to use this directory"
		else
			echo "sydf is configured to use another directory"
			echo "run 'sydf reinit' to reinitialize"
		fi
	else
		echo $DIR > $SYDFCONFIG
	fi

}

function add {

	if [[ -z "${@}" ]]; then
		echo "no files selected to add"
	fi

	for file in ${@}; do

		FILEPATH=`path $file`
		FILE=${FILEPATH:1}
		DIR=`dirname $FILE`

		if [ -e $SYDFDIR/$FILE ]; then
			echo "'$file' is already managed using sydf"
		elif [ -f $FILEPATH ] && [ ! -L $file ]; then

			mkdir -p $SYDFDIR/$DIR
			mv /$FILE $SYDFDIR/$FILE
			ln -s $SYDFDIR/$FILE /$FILE

		elif [ -d $FILEPATH ] && [ ! -L $file ]; then

			mkdir -p $SYDFDIR/$DIR
			mv /$FILE $SYDFDIR/$FILE
			ln -s $SYDFDIR/$FILE /$FILE

		else
			echo "'$file' cannot be added to sydf"
		fi
	done

}



function list {

	find $SYDFDIR ! -path $SYDFDIR -printf "$1%P\n"; 

}

case $1 in
	init)
		init $2;
		;;
	add)
		add ${@:2};
		;;
	remove)
		remove ${@:2};
		;;
	list)
		list /;
		;;
	cleanup)
		cleanup;
		;;
	path)
		path ${@:2};
		;;
esac